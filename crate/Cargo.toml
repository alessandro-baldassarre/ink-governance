[package]
name          = "ink-governance"
version       = "0.1.0"
authors       = ["Alessandro Baldassarre <alessandro.baldassarre.dev@gmail.com>"]
edition       = "2021"
rust-version  = "1.69.0-nightly"

license       = "MIT"
readme        = "README.md"
repository    = "https://github.com/alessandro-baldassarre/ink-governance/crate"
documentation = "https://docs.rs/ink_governance"
keywords      = ["wasm", "polkadot", "ink"]
description   = "Library crate to simplify the creation of governance based smart contracts written in ink!"
include       = ["Cargo.toml", "src/**/*.rs", "README.md", "LICENSE"]

[lib]
name = "ink_governance"
path = "src/lib.rs"
crate-type = ["rlib"]

[dependencies]
ink        = { version = "4.0.1", default-features = false }
openbrush  = { git = "https://github.com/727-Ventures/openbrush-contracts", default-features = false, features = ["psp22"] }
scale      = { package = "parity-scale-codec", version = "3.4.0", default-features = false, features = ["derive"] }
scale-info = { version = "2.3.1", default-features = false, features = ["derive"], optional = true }

[features]
default = ["std"]
std = [
    "ink/std",
    "openbrush/std",
    "scale/std",
    "scale-info/std",
]

governor = []
governor_settings = []
governor_counting_simple = []
governor_voting_group = []

psp22_votes = []

governor_group = ["governor","governor_counting_simple","governor_voting_group"]
governor_psp22 = ["governor","governor_counting_simple","psp22_votes"]



